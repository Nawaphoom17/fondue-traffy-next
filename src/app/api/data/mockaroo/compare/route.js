// app/api/data/mockaroo/route.js
import axios from "axios";
import https from 'https';
import mockData from "@/mock/comparestats.json"; // ‡∏ô‡∏≥‡πÄ‡∏Ç‡πâ‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• mockData ‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå JSON

const agent = new https.Agent({ rejectUnauthorized: false }); // ‚ùó‚ùó‚ùó ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö SSL certificate (‡πÑ‡∏°‡πà‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÉ‡∏ô production)

export async function GET(request) {
  try {
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á URL object ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏∂‡∏á query parameters
    const { searchParams } = new URL(request.url);

    // ‡∏£‡∏±‡∏ö‡∏Ñ‡πà‡∏≤ query parameters ‡∏´‡∏£‡∏∑‡∏≠‡πÉ‡∏ä‡πâ‡∏Ñ‡πà‡∏≤ default ‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏°‡∏≤
    const province = searchParams.get("province") || "province_test";
    const year = searchParams.get("year") || "year_test";
    //const org = searchParams.get("org") || "org_test";

    // ‡∏™‡∏£‡πâ‡∏≤‡∏á URL ‡∏Ç‡∏≠‡∏á API ‡∏†‡∏≤‡∏¢‡∏ô‡∏≠‡∏Å‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ query parameters ‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡∏°‡∏≤‡∏à‡∏≤‡∏Å Client
    const url = `https://my.api.mockaroo.com/comparestats.json?key=86a51270&province=${province}&year=${year}`;

    // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å API ‡∏†‡∏≤‡∏¢‡∏ô‡∏≠‡∏Å
    // const response = await axios.get(url);
    const response = await axios.get(url, { httpsAgent: agent });
    const data = response.data;

    console.log("üéØ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å mockaroo:", data); // ‡πÄ‡∏û‡∏¥‡πà‡∏° log

    // ‡∏™‡πà‡∏á‡∏Å‡∏•‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö JSON
    return Response.json(data);
  } catch (error) {
    // console.error("Error fetching compare data:", error);
    // return new Response("Internal Server Error", { status: 500 });
    console.warn("‚ö†Ô∏è mockaroo fetch failed, using local mockData instead.");
    console.error("‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î error:", error.message);
    return Response.json(mockData); // fallback ‡πÑ‡∏õ‡πÉ‡∏ä‡πâ mock local
  }
}
